[{"/Users/logancurtis/workspace/kennels/src/index.js":"1","/Users/logancurtis/workspace/kennels/src/components/Kennel.js":"2","/Users/logancurtis/workspace/kennels/src/components/ApplicationViews.js":"3","/Users/logancurtis/workspace/kennels/src/components/Home.js":"4","/Users/logancurtis/workspace/kennels/src/components/animal/AnimalCard.js":"5","/Users/logancurtis/workspace/kennels/src/components/nav/NavBar.js":"6","/Users/logancurtis/workspace/kennels/src/components/Employee/EmployeeCard.js":"7","/Users/logancurtis/workspace/kennels/src/components/Location/LocationCard.js":"8","/Users/logancurtis/workspace/kennels/src/components/Customer/CustomerCard.js":"9","/Users/logancurtis/workspace/kennels/src/components/animal/AnimalProvider.js":"10","/Users/logancurtis/workspace/kennels/src/components/animal/AnimalList.js":"11","/Users/logancurtis/workspace/kennels/src/components/Location/LocationList.js":"12","/Users/logancurtis/workspace/kennels/src/components/Location/LocationProvider.js":"13","/Users/logancurtis/workspace/kennels/src/components/Employee/EmployeeProvider.js":"14","/Users/logancurtis/workspace/kennels/src/components/Employee/EmployeeList.js":"15","/Users/logancurtis/workspace/kennels/src/components/Customer/CustomerProvider.js":"16","/Users/logancurtis/workspace/kennels/src/components/Customer/CustomerList.js":"17","/Users/logancurtis/workspace/kennels/src/components/animal/AnimalForm.js":"18"},{"size":816,"mtime":1611248475362,"results":"19","hashOfConfig":"20"},{"size":235,"mtime":1611249852835,"results":"21","hashOfConfig":"20"},{"size":2908,"mtime":1611609450371,"results":"22","hashOfConfig":"20"},{"size":305,"mtime":1611249712602,"results":"23","hashOfConfig":"20"},{"size":239,"mtime":1611249787475,"results":"24","hashOfConfig":"20"},{"size":886,"mtime":1611249870664,"results":"25","hashOfConfig":"20"},{"size":266,"mtime":1611250366628,"results":"26","hashOfConfig":"20"},{"size":277,"mtime":1611250385300,"results":"27","hashOfConfig":"20"},{"size":274,"mtime":1611381237744,"results":"28","hashOfConfig":"20"},{"size":1434,"mtime":1611597431462,"results":"29","hashOfConfig":"20"},{"size":876,"mtime":1611610032405,"results":"30","hashOfConfig":"20"},{"size":780,"mtime":1611381237748,"results":"31","hashOfConfig":"20"},{"size":1221,"mtime":1611381237748,"results":"32","hashOfConfig":"20"},{"size":1220,"mtime":1611381237747,"results":"33","hashOfConfig":"20"},{"size":780,"mtime":1611381237746,"results":"34","hashOfConfig":"20"},{"size":1223,"mtime":1611381237745,"results":"35","hashOfConfig":"20"},{"size":780,"mtime":1611381237745,"results":"36","hashOfConfig":"20"},{"size":3557,"mtime":1611608270131,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dg5do6",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},"/Users/logancurtis/workspace/kennels/src/index.js",[],"/Users/logancurtis/workspace/kennels/src/components/Kennel.js",[],"/Users/logancurtis/workspace/kennels/src/components/ApplicationViews.js",["79","80","81","82","83"],"/Users/logancurtis/workspace/kennels/src/components/Home.js",[],"/Users/logancurtis/workspace/kennels/src/components/animal/AnimalCard.js",[],["84","85"],"/Users/logancurtis/workspace/kennels/src/components/nav/NavBar.js",[],"/Users/logancurtis/workspace/kennels/src/components/Employee/EmployeeCard.js",[],"/Users/logancurtis/workspace/kennels/src/components/Location/LocationCard.js",[],"/Users/logancurtis/workspace/kennels/src/components/Customer/CustomerCard.js",[],"/Users/logancurtis/workspace/kennels/src/components/animal/AnimalProvider.js",[],"/Users/logancurtis/workspace/kennels/src/components/animal/AnimalList.js",["86"],"/Users/logancurtis/workspace/kennels/src/components/Location/LocationList.js",["87"],"import React, { useContext, useEffect } from \"react\"\nimport { LocationContext } from \"./LocationProvider\"\nimport { LocationCard } from \"./LocationCard\"\nimport \"./Location.css\"\n\nexport const LocationList = () => {\n  // This state changes when `getLocations()` is invoked below\n    const { locations, getLocations } = useContext(LocationContext)\n\n  //useEffect - reach out to the world for something\n    useEffect(() => {\n    console.log(\"LocationList: useEffect - getLocations\")\n    getLocations()\n\n    }, [])\n\n\nreturn (\n    <div className=\"locations\">\n        {console.log(\"LocationList: Render\", locations)}\n        {\n            locations.map(location => {\n                return <LocationCard key={location.id} location={location} />\n            })\n        }\n    </div>\n    )\n}","/Users/logancurtis/workspace/kennels/src/components/Location/LocationProvider.js",[],"/Users/logancurtis/workspace/kennels/src/components/Employee/EmployeeProvider.js",[],"/Users/logancurtis/workspace/kennels/src/components/Employee/EmployeeList.js",["88"],"import React, { useContext, useEffect } from \"react\"\nimport { EmployeeContext } from \"./EmployeeProvider\"\nimport { EmployeeCard } from \"./EmployeeCard\"\nimport \"./Employee.css\"\n\nexport const EmployeeList = () => {\n  // This state changes when `getEmployees()` is invoked below\n    const { employees, getEmployees } = useContext(EmployeeContext)\n\n  //useEffect - reach out to the world for something\n    useEffect(() => {\n    console.log(\"EmployeeList: useEffect - getEmployees\")\n    getEmployees()\n\n    }, [])\n\n\nreturn (\n    <div className=\"employees\">\n        {console.log(\"EmployeeList: Render\", employees)}\n        {\n            employees.map(employee => {\n                return <EmployeeCard key={employee.id} employee={employee} />\n            })\n        }\n    </div>\n    )\n}","/Users/logancurtis/workspace/kennels/src/components/Customer/CustomerProvider.js",[],"/Users/logancurtis/workspace/kennels/src/components/Customer/CustomerList.js",["89"],"import React, { useContext, useEffect } from \"react\"\nimport { CustomerContext } from \"./CustomerProvider\"\nimport { CustomerCard } from \"./CustomerCard\"\nimport \"./Customer.css\"\n\nexport const CustomerList = () => {\n  // This state changes when `getCustomers()` is invoked below\n    const { customers, getCustomers } = useContext(CustomerContext)\n\n  //useEffect - reach out to the world for something\n    useEffect(() => {\n    console.log(\"CustomerList: useEffect - getCustomers\")\n    getCustomers()\n\n    }, [])\n\n\nreturn (\n    <div className=\"customers\">\n        {console.log(\"CustomerList: Render\", customers)}\n        {\n            customers.map(customer => {\n                return <CustomerCard key={customer.id} customer={customer} />\n            })\n        }\n    </div>\n    )\n}","/Users/logancurtis/workspace/kennels/src/components/animal/AnimalForm.js",["90"],"import React, { useContext, useRef, useEffect } from \"react\"\nimport { LocationContext } from \"../Location/LocationProvider\"\nimport { AnimalContext } from \"../animal/AnimalProvider\"\nimport { CustomerContext } from \"../Customer/CustomerProvider\"\nimport \"./Animal.css\"\nimport { useHistory } from 'react-router-dom';\n\nexport const AnimalForm = () => {\n    const { addAnimal } = useContext(AnimalContext)\n    const { locations, getLocations } = useContext(LocationContext)\n    const { customers, getCustomers } = useContext(CustomerContext)\n\n    /*\n    With React, we do not target the DOM with `document.querySelector()`. Instead, our return (render) reacts to state or props\n\n    We can create references that can be attached to the input fields in the form. This allows us to get the value of the input fields later once the save button is clicked.\n    */\n\n    const name = useRef(null)\n    const location = useRef(null)\n    const customer = useRef(null)\n\n    const history = useHistory();\n\n    /*\n    Reach out to the world and get customers state\n    and locations state on initialization.\n    */\n    useEffect(() => {\n    getCustomers().then(getLocations)\n    }, [])\n\n    const handleClickNewAnimal = (event) => {\n    event.preventDefault() //Prevent browser from submitting the form\n    /*\n    The `location` and `customer` variables below are\n    the references attached to the input fields.\n    In React, use `.currentValue` instead of `.value`\n    */\n    const locationId = parseInt(location.current.value)\n    const customerId = parseInt(customer.current.value)\n\n    if (locationId === 0) {\n    window.alert(\"Please select a location\")\n    } else {\n      //the following properties match with the database\n    addAnimal({\n        name: name.current.value,\n        locationId,\n        customerId\n    })\n        .then(() => history.push(\"/animals\"))\n    }\n    }\n\n    return (\n    <form className=\"animalForm\">\n        <h2 className=\"animalForm__title\">New Animal</h2>\n        <fieldset>\n            <div className=\"form-group\">\n                <label htmlFor=\"animalName\">Animal name: </label>\n                <input type=\"text\" id=\"animalName\" ref={name} required autoFocus className=\"form-control\" placeholder=\"Animal name\" />\n            </div>\n        </fieldset>\n        <fieldset>\n            <div className=\"form-group\">\n                <label htmlFor=\"location\">Assign to location: </label>\n                <select defaultValue=\"\" name=\"location\" ref={location} id=\"animalLocation\" className=\"form-control\" >\n                    <option value=\"0\">Select a location</option>\n                    {locations.map(l => (\n                        <option key={l.id} value={l.id}>\n                            {l.name}\n                        </option>\n                    ))}\n                </select>\n            </div>\n        </fieldset>\n        <fieldset>\n            <div className=\"form-group\">\n                <label htmlFor=\"customer\">Customer: </label>\n                <select defaultValue=\"\" name=\"customer\" ref={customer} id=\"customerAnimal\" className=\"form-control\" >\n                    <option value=\"0\">Select a customer</option>\n                    {customers.map(c => (\n                        <option key={c.id} value={c.id}>\n                            {c.name}\n                        </option>\n                    ))}\n                </select>\n            </div>\n        </fieldset>\n        <button className=\"btn btn-primary\"\n            onClick={handleClickNewAnimal}>\n            Save Animal\n        </button>\n    </form>\n    )\n}",{"ruleId":"91","severity":1,"message":"92","line":4,"column":10,"nodeType":"93","messageId":"94","endLine":4,"endColumn":20},{"ruleId":"91","severity":1,"message":"95","line":5,"column":10,"nodeType":"93","messageId":"94","endLine":5,"endColumn":22},{"ruleId":"91","severity":1,"message":"96","line":6,"column":10,"nodeType":"93","messageId":"94","endLine":6,"endColumn":22},{"ruleId":"91","severity":1,"message":"97","line":7,"column":10,"nodeType":"93","messageId":"94","endLine":7,"endColumn":22},{"ruleId":"98","severity":1,"message":"99","line":60,"column":13,"nodeType":"100","messageId":"101","endLine":94,"endColumn":14},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":18,"column":8,"nodeType":"108","endLine":18,"endColumn":10,"suggestions":"109"},{"ruleId":"106","severity":1,"message":"110","line":15,"column":8,"nodeType":"108","endLine":15,"endColumn":10,"suggestions":"111"},{"ruleId":"106","severity":1,"message":"112","line":15,"column":8,"nodeType":"108","endLine":15,"endColumn":10,"suggestions":"113"},{"ruleId":"106","severity":1,"message":"114","line":15,"column":8,"nodeType":"108","endLine":15,"endColumn":10,"suggestions":"115"},{"ruleId":"106","severity":1,"message":"116","line":31,"column":8,"nodeType":"108","endLine":31,"endColumn":10,"suggestions":"117"},"no-unused-vars","'AnimalCard' is defined but never used.","Identifier","unusedVar","'LocationCard' is defined but never used.","'EmployeeCard' is defined but never used.","'CustomerCard' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-native-reassign",["118"],"no-negated-in-lhs",["119"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAnimals'. Either include it or remove the dependency array.","ArrayExpression",["120"],"React Hook useEffect has a missing dependency: 'getLocations'. Either include it or remove the dependency array.",["121"],"React Hook useEffect has a missing dependency: 'getEmployees'. Either include it or remove the dependency array.",["122"],"React Hook useEffect has a missing dependency: 'getCustomers'. Either include it or remove the dependency array.",["123"],"React Hook useEffect has missing dependencies: 'getCustomers' and 'getLocations'. Either include them or remove the dependency array.",["124"],"no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [getAnimals]",{"range":"135","text":"136"},"Update the dependencies array to be: [getLocations]",{"range":"137","text":"138"},"Update the dependencies array to be: [getEmployees]",{"range":"139","text":"140"},"Update the dependencies array to be: [getCustomers]",{"range":"141","text":"142"},"Update the dependencies array to be: [getCustomers, getLocations]",{"range":"143","text":"144"},[557,559],"[getAnimals]",[505,507],"[getLocations]",[505,507],"[getEmployees]",[505,507],"[getCustomers]",[1164,1166],"[getCustomers, getLocations]"]